name: Deploy Project

on:
  push:
    tags:
    - v*
  
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all --verbose
      
  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    needs: test
    strategy:
      matrix:
        include:
          - triple: x86_64-pc-windows-msvc
            filename: mepris.exe
            runner: windows-latest
            compile: native
  
          - triple: x86_64-unknown-linux-gnu
            filename: mepris
            runner: ubuntu-latest
            compile: cross
  
          - triple: x86_64-apple-darwin
            filename: mepris
            runner: macos-latest
            compile: native
  
    steps:
      - uses: actions/checkout@v4
  
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.triple }}
        if: matrix.compile == 'native'
  
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  
      - run: cargo install cross --git https://github.com/cross-rs/cross
        if: matrix.compile == 'cross'
  
      - run: cargo build --release --target ${{ matrix.triple }} --target-dir ${{ runner.temp }}
        if: matrix.compile == 'native'
  
      - run: cross build --release --target ${{ matrix.triple }} --target-dir ${{ runner.temp }}
        if: matrix.compile == 'cross'
  
      - uses: actions/upload-artifact@v4
        with:
          name: mepris-${{ matrix.triple }}
          path: ${{ runner.temp }}/${{ matrix.triple }}/release/${{ matrix.filename }}
          if-no-files-found: error
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          version=$(grep '^version' Cargo.toml | head -1 | sed -E 's/version\s*=\s*"(.*)"/\1/')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Extracted version: $version"
    
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
  
      - run: |
          cd artifacts;
          for i in */; do
            cd "$i";
            zip -r "../${i%/}.zip" ./;
            cd ..;
            rm -rf "$i";
          done
  
      - run: |
          cd artifacts;
          for i in *.zip; do
            sha256sum "$i" | cut -d " " -f 1 > "$i.sha256";
          done
  
      - name: Create GitHub Release
        uses: docker://antonyurchenko/git-release:v6
        with:
          args: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
